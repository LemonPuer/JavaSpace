server:
  port: 80

spring:
  application:
    name: consumer-service
  zipkin:
    base-url:  http://192.168.124.105:9411
  sleuth:
    sampler:
      #采样率值介于 0 到 1 之间，1 则表示全部采集
      probability: 1
  cloud:
    config:
      label: main #分支名称
      name: config #配置文件名称
      profile: dev #读取后缀名称
      uri: http://127.0.0.1:6001 #配置中心地址
    stream:
      binders:
        myRabbit: #自定义名称，用于和binding整合
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: 192.168.124.105
                port: 5672
                username: john
                password: 123456
      bindings:
        test-output:
          content-type: application/json
          destination: myExchange2
          binder: myRabbit


  #rabbitmq相关配置
  rabbitmq:
    host: 192.168.124.105
    port: 5672
    username: john
    password: 123456


eureka:
  client:
    #false表示不向注册中心注册自己。
    register-with-eureka: true
    #false表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务
    fetch-registry: true
    service-url:
      #设置与Eureka Server交互的地址查询服务和注册服务都需要依赖这个地址。
      defaultZone: http://localhost:7001/eureka/
  instance:
    instance-id: consumer-service:80
    prefer-ip-address: true     #访问路径可以显示IP地址

logging:
  level:
    # feign日志以什么级别监控哪个接口
    com.test.service.PayService: debug

feign:
  circuitbreaker:
    enabled: true   #在Feign中开启Hystrix
  client:
    config:
      default:
        connect-timeout: 5000
        read-timeout: 5000

hystrix:
  command:
    default:
      execution.isolation.thread.timeoutInMilliseconds: 5000

# 暴露监控端点
management:
  endpoints:
    web:
      exposure:
        include: "*"